buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.12"
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version "2.2.2.RELEASE"
}

group = 'com.eshop'
version = '1.0.0-SNAPSHOT'
description = 'catalog api project'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.protobuf'

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'ch.qos.logback', module: 'logback-core'
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}

ext {
    springBootVersion = '2.2.2.RELEASE'
    jsonwebtokenVersion = '0.10.5'
    grpcVersion = '1.31.0'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }

    dependencies {

        // commons
        dependency 'commons-lang:commons-lang:2.6'
        dependency 'com.google.guava:guava:28.1-jre'

        //cache
        dependency 'com.github.ben-manes.caffeine:caffeine:2.8.1'
        dependency 'org.redisson:redisson-spring-boot-starter:3.12.5'

        //authentication
        dependency group: 'io.jsonwebtoken', name: 'jjwt-api', version: "$jsonwebtokenVersion"
        dependency group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: "$jsonwebtokenVersion"
        dependency group: 'io.jsonwebtoken', name: 'jjwt-impl', version: "$jsonwebtokenVersion"

        //serialize
        dependency group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.4'
        dependency group: 'com.google.guava', name: 'guava-testlib', version: '28.1-jre'
        dependency group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

        //grpc
        dependency "io.grpc:grpc-netty:${grpcVersion}"
        dependency "io.grpc:grpc-protobuf:${grpcVersion}"
        dependency "io.grpc:grpc-stub:${grpcVersion}"
        dependency "io.grpc:grpc-services:${grpcVersion}"

        dependency group: 'org.postgresql', name: 'postgresql', version: '42.2.15'

        dependency 'io.springfox:springfox-swagger2:2.9.2'
        dependency 'io.springfox:springfox-swagger-ui:2.9.2'

        dependency group: 'commons-io', name: 'commons-io', version: '2.7'

    }
}

dependencies {
    implementation('org.postgresql:postgresql')
    implementation('org.apache.logging.log4j:log4j-core')
    implementation('org.apache.logging.log4j:log4j-api')
    implementation group: 'org.slf4j', name: 'slf4j-api'

    implementation('io.grpc:grpc-netty')
    implementation('io.grpc:grpc-protobuf')
    implementation('io.grpc:grpc-stub')
    implementation('io.grpc:grpc-services')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('redis.clients:jedis')

    api('io.springfox:springfox-swagger2')
    api('io.springfox:springfox-swagger-ui')
    api('commons-io:commons-io')

    compileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'

    testImplementation group: 'org.projectlombok', name: 'lombok'
    testImplementation group: 'junit', name: 'junit'
    testImplementation 'org.mockito:mockito-core'
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java', 'generated-sources/main/grpc'
        }
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.2'
    }

    // Configure the codegen plugins
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.1.2'
        }
    }

    generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
